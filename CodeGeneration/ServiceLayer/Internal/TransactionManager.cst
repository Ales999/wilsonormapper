<%-- 
Written by Brian DeMarzo (http://www.demarzo.net)
Derived from CodeSmith templates by Paul Weiter
--%>
<%@ CodeTemplate 
	Language="C#" 
	TargetLanguage="C#" 
	Description="Generate a static TransactionManager class for Wilson O/R Mapper. Requires .Net 2.0." 
	Debug="true" %>

<%@ Register Name="CommonProperties" Template="CommonProperties.cst" MergeProperties="True" ExcludeProperties="" %>

//------------------------------------------------------------------------------
// <autogenerated>
//		This code was generated by a CodeSmith Template.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Data;
using Wilson.ORMapper;

namespace <%= DataAccessNamespace %>
{
    /// <summary>
    /// Helper class to manage persistance with a transaction
    /// </summary>
    public class TransactionManager : IDisposable
    {
        private Transaction _transaction;

        /// <summary>
        /// Initializes a new instance of the <see cref="T:TransactionManager"/> class.
        /// </summary>
        /// <param name="isolationLevel">The isolation level.</param>
        public TransactionManager(IsolationLevel isolationLevel)
        {
            _transaction = DataManager.ObjectSpace.BeginTransaction(isolationLevel);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="T:TransactionManager"/> class.
        /// </summary>
        public TransactionManager()
        {
            _transaction = DataManager.ObjectSpace.BeginTransaction();
        }

        /// <summary>
        /// Commits this transaction.
        /// </summary>
        public void Commit()
        {
            _transaction.Commit();
        }

        /// <summary>
        /// Rollbacks this transaction.
        /// </summary>
        public void Rollback()
        {
            _transaction.Rollback();
        }

		#region IDisposable Members
        /// <summary>
        /// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
        /// </summary>
        public void Dispose()
        {
            _transaction.Dispose();
        }
		#endregion
    }

}