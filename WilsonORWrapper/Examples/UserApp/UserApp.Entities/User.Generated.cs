//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//	   DO NOT MODIFY contents of this file. Changes to this
//	   file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using WilsonORWrapper;
using WilsonORWrapper.Entities;
using Wilson.ORMapper;

namespace UserApp.Entities
{
	#region User
	[Serializable,DataObject(true)]
    public partial class User : EntityBase<User>, IObjectHelper
	{
		#region Properties

		private int _userid;
		///<summary>Database mapping to column users.userid</summary>
		[DataObjectField(true, true)]
		public int Userid
		{
			get { return _userid; }
		}
		
		private string _username;
		///<summary>Database mapping to column users.username</summary>
		public string Username
		{
			get { return _username; }
			set { _username = value; }
		}
		
		private string _password;
		///<summary>Database mapping to column users.password</summary>
		public string Password
		{
			get { return _password; }
			set { _password = value; }
		}
		
		private Nullable<int> _departmentid;
		///<summary>Database mapping to column users.departmentid</summary>
		public Nullable<int> Departmentid
		{
			get { return _departmentid; }
			set { _departmentid = value; }
		}
		
		private ObjectHolder<Department> _department;
		///<summary>Instance of a Department object</summary>
		public Department Department
		{
			get { return _department.InnerObject; }
			set { _department.InnerObject = value; }
		}
		
		private IList<Department> _managerDepartments;
		///<summary>Collection of Department objects</summary>
		public IList<Department> ManagerDepartments
		{
			get { return _managerDepartments; }
		}
		
		#endregion
		
		///<summary>Initializes a new instance of this class</summary>
		public User() : base()
		{
			// Default Constructor
		}

		#region System.Object
		/// <summary>
		/// Returns the hash code for this entity, 
		/// based on the primary key identity fields of the underlying object.
		/// </summary>
		public override int GetHashCode()
		{
			string hashstring = _userid.GetHashCode().ToString();
			int hashcode;
			while ( int.TryParse(hashstring, out hashcode) == false )
				hashcode = hashcode / 11;
			
			return hashcode;
		}
		/// <summary>
		/// Returns a formatted string that includes key fields of this entity.
		/// </summary>
		/// <returns></returns>
		public override string ToString()
		{
			return String.Format("{0}", _userid.ToString());
		}
		#endregion
		
		public override IIdentity GetIdentity()
		{
			return new UserIdentity(_userid);
		}

		#region IObjectHelper
		/// <summary>Indexer to update local member variables</summary>	
		/// <remarks>This indexer is used by the Wilson WilsonORWrapper</remarks>
		object IObjectHelper.this[string memberName]
		{
			get {
				switch (memberName) {
					case "_userid": return _userid;
					case "_username": return _username;
					case "_password": return _password;
					case "_departmentid": return _departmentid;
					case "_department": return _department;
					case "_managerDepartments": return _managerDepartments;
									
					default: throw new Exception(string.Format("Mapping: IObjectHelper Get is missing member case {0}", memberName));
				}
			}
			set {
				//handle null values
				if(value == null)
					return;
					
				switch (memberName) {
					case "_userid": _userid = (int)value; break;
					case "_username": _username = (string)value; break;
					case "_password": _password = (string)value; break;
					case "_departmentid": _departmentid = (Nullable<int>)value; break;
					case "_department": _department = (ObjectHolder<Department>)value; break;
					case "_managerDepartments": _managerDepartments = (IList<Department>)value; break;
				
					default: throw new Exception(string.Format("Mapping: IObjectHelper Set is missing member case {0}", memberName));
				}
			}
		}
		#endregion
	}
	#endregion
	
	#region UserIdentity
	public class UserIdentity : IdentityBase
	{
		public readonly int Userid;

		private readonly string[] IDENTITY_KEYS = new string[] { "User.Userid" };

		public UserIdentity(int userid)
		{
			this.Userid = userid;

		}
		public override string[] Keys
		{
			get { return IDENTITY_KEYS; }
		}
		public override DictionaryEntry[] GetIdentityEntries()
		{
			DictionaryEntry[] entries = new DictionaryEntry[1]; 
			entries[0] = new DictionaryEntry("User.Userid", Userid); 

			return entries;
		}
	}
	#endregion
}
